<?xml version="1.0" encoding="utf-8"?>

<!-- @author https://github.com/103style
     @date 2019/11/19 15:24 -->
<scale xmlns:android="http://schemas.android.com/apk/res/android"
    android:duration="2000"
    android:fillBefore="true"
    android:fromXScale="0.1"
    android:fromYScale="0.1"
    android:interpolator="@android:anim/cycle_interpolator"
    android:pivotX="50%"
    android:pivotY="50%"
    android:repeatCount="3"
    android:repeatMode="restart"
    android:toXScale="1.5"
    android:toYScale="1.5" />

    <!--doc: https://developer.android.com/guide/topics/resources/animation-resource.html#Tween-->

    <!--android:fromXScale     起始的X方向上相对自身的缩放比例，浮点值，
                                 比如1.0代表自身无变化，0.5代表起始时缩小一倍，2.0代表放大一倍-->
    <!--android:toXScale       结尾的X方向上相对自身的缩放比例，浮点值-->
    <!--android:fromYScale     起始的Y方向上相对自身的缩放比例，浮点值-->
    <!--android:toYScale       结尾的Y方向上相对自身的缩放比例，浮点值-->
    <!--android:pivotX         缩放起点X轴坐标，可以是数值、百分数、百分数p 三种样式，比如 50、50%、50%p，
                                 当为数值时，表示在当前View的左上角，即原点处加上50px，做为起始缩放点；
                                 如果是50%，表示在当前控件的左上角加上自己宽度的50%做为起始点；
                                 如果是50%p，那么就是表示在当前的左上角加上父控件宽度的50%做为起始点x轴坐标。-->
    <!--android:pivotY         缩放起点Y轴坐标，取值及意义跟android:pivotX一样。-->

    <!--从Animation类继承的属性:-->
    <!--android:duration       动画持续时间，以毫秒为单位 -->
    <!--android:fillAfter      如果设置为true，控件动画结束时，将保持动画最后时的状态-->
    <!--android:fillBefore     如果设置为true,控件动画结束时，还原到开始动画前的状态-->
    <!--android:fillEnabled    与android:fillBefore 效果相同，都是在动画结束时，将控件还原到初始化状态-->
    <!--android:repeatCount    重复次数-->
    <!--android:repeatMode     重复类型，有reverse和restart两个值，
                                 reverse表示倒序回放，
                                 restart表示重新放一遍，必须与repeatCount一起使用才能看到效果。
                                 因为这里的意义是重复的类型，即回放时的动作。-->
    <!--android:interpolator   设定插值器，其实就是指定的动作效果-->

    <!--interpolator doc : https://developer.android.com/guide/topics/resources/animation-resource.html#Interpolators-->
    <!--AccelerateDecelerateInterpolator:   @android:anim/accelerate_decelerate_interpolator
                                            在动画开始与结束的地方速率改变比较慢，在中间的时候加速-->
    <!--AccelerateInterpolator:             @android:anim/accelerate_interpolator
                                            在动画开始的地方速率改变比较慢，然后开始加速-->
    <!--AnticipateInterpolator:             @android:anim/anticipate_interpolator
                                            开始的时候向后然后向前甩-->
    <!--AnticipateOvershootInterpolator:    @android:anim/anticipate_overshoot_interpolator
                                            开始的时候向后然后向前甩一定值后返回最后的值-->
    <!--BounceInterpolator:                 @android:anim/bounce_interpolator
                                            动画结束的时候弹起-->
    <!--CycleInterpolator:                  @android:anim/cycle_interpolator
                                            动画循环播放特定的次数，速率改变沿着正弦曲线-->
    <!--DecelerateInterpolator:             @android:anim/decelerate_interpolator
                                            在动画开始的地方快然后慢-->
    <!--LinearInterpolator:                 @android:anim/linear_interpolator
                                            以常量速率改变-->
    <!--OvershootInterpolator:              @android:anim/overshoot_interpolator
                                            向前甩一定值后再回到原来位置-->